package MechArch;

import java.io.*;
import java.net.*;

public class MechArchGUI extends javax.swing.JFrame {

    /**
     * Creates new form MechArchGUI
     */
    public MechArchGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        connectStateButton = new javax.swing.JButton();
        connectArduinoButton = new javax.swing.JButton();
        xAxisBar = new javax.swing.JProgressBar();
        xMinLabel = new javax.swing.JLabel();
        xMaxLabel = new javax.swing.JLabel();
        xLabel = new javax.swing.JLabel();
        yAxisBar = new javax.swing.JProgressBar();
        yMinLabel = new javax.swing.JLabel();
        yMaxLabel = new javax.swing.JLabel();
        yLabel = new javax.swing.JLabel();
        drawingBar = new javax.swing.JProgressBar();
        drawMinLabel = new javax.swing.JLabel();
        drawMaxLabel = new javax.swing.JLabel();
        drawLabel = new javax.swing.JLabel();
        fOpticDisplay = new javax.swing.JProgressBar();
        rOpticDisplay = new javax.swing.JProgressBar();
        fOpticLabel = new javax.swing.JLabel();
        rOpticLabel = new javax.swing.JLabel();
        lMotorCurrentBar = new javax.swing.JProgressBar();
        rMotorCurrentBar = new javax.swing.JProgressBar();
        yLinacCurrentBar = new javax.swing.JProgressBar();
        drawLinacCurrentBar = new javax.swing.JProgressBar();
        rMotorLabel = new javax.swing.JLabel();
        lMotorLabel = new javax.swing.JLabel();
        yLinacLabel = new javax.swing.JLabel();
        drawLinacLabel = new javax.swing.JLabel();
        currentDisplayLabel = new javax.swing.JLabel();
        rMotorCurrentLabel = new javax.swing.JLabel();
        lMotorCurrentLabel = new javax.swing.JLabel();
        yLinacCurrentLabel = new javax.swing.JLabel();
        drawLinacCurrentLabel = new javax.swing.JLabel();
        xPosLabel = new javax.swing.JLabel();
        drawPosLabel = new javax.swing.JLabel();
        yPosLabel = new javax.swing.JLabel();
        feedbackLabel = new javax.swing.JLabel();
        endStateButton = new javax.swing.JButton();
        fireButton = new javax.swing.JButton();
        drawButton = new javax.swing.JButton();
        retractButton = new javax.swing.JButton();
        eStopButton = new javax.swing.JButton();
        modeLabel = new javax.swing.JLabel();
        debugCheck = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mechanical Archer GUI");
        setPreferredSize(new java.awt.Dimension(1024, 768));
        setSize(new java.awt.Dimension(1024, 768));

        connectStateButton.setText("Connect to State Machine");
        connectStateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectStateButtonActionPerformed(evt);
            }
        });

        connectArduinoButton.setText("Connect to Arduino");
        connectArduinoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectArduinoButtonActionPerformed(evt);
            }
        });

        xAxisBar.setMaximum(4096);
        xAxisBar.setMinimum(-4096);
        xAxisBar.setToolTipText("");
        xAxisBar.setPreferredSize(new java.awt.Dimension(256, 14));

        xMinLabel.setText("-4096");

        xMaxLabel.setText("4096");

        xLabel.setText("X-Axis Position");

        yAxisBar.setMaximum(4096);
        yAxisBar.setOrientation(1);
        yAxisBar.setToolTipText("");
        yAxisBar.setPreferredSize(new java.awt.Dimension(14, 256));

        yMinLabel.setText("0");

        yMaxLabel.setText("4096");

        yLabel.setText("Y-Axis Position");

        drawingBar.setMaximum(4096);
        drawingBar.setOrientation(1);
        drawingBar.setToolTipText("");
        drawingBar.setPreferredSize(new java.awt.Dimension(14, 256));

        drawMinLabel.setText("0");

        drawMaxLabel.setText("4096");

        drawLabel.setText("Drawing Linac Position");

        fOpticDisplay.setMaximum(1);
        fOpticDisplay.setPreferredSize(new java.awt.Dimension(30, 30));

        rOpticDisplay.setMaximum(1);
        rOpticDisplay.setPreferredSize(new java.awt.Dimension(30, 30));

        fOpticLabel.setText("Front Optic");

        rOpticLabel.setText("Rear Optic");

        lMotorCurrentBar.setOrientation(1);

        rMotorCurrentBar.setOrientation(1);

        yLinacCurrentBar.setOrientation(1);

        drawLinacCurrentBar.setOrientation(1);

        rMotorLabel.setText("Right Motor");

        lMotorLabel.setText("Left Motor");

        yLinacLabel.setText("Y Linac");

        drawLinacLabel.setText("Drawing Linac");

        currentDisplayLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        currentDisplayLabel.setText("Motor Currents in Amps");

        rMotorCurrentLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rMotorCurrentLabel.setText("0");

        lMotorCurrentLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lMotorCurrentLabel.setText("0");

        yLinacCurrentLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        yLinacCurrentLabel.setText("0");

        drawLinacCurrentLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        drawLinacCurrentLabel.setText("0");

        xPosLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        xPosLabel.setText("0");

        drawPosLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        drawPosLabel.setText("0");

        yPosLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        yPosLabel.setText("0");

        feedbackLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        feedbackLabel.setText("System Feedback");

        endStateButton.setText("Close State Machine and Exit");
        endStateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endStateButtonActionPerformed(evt);
            }
        });

        fireButton.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        fireButton.setForeground(new java.awt.Color(255, 150, 0));
        fireButton.setText("FIRE");
        fireButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fireButtonActionPerformed(evt);
            }
        });

        drawButton.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        drawButton.setForeground(new java.awt.Color(0, 255, 0));
        drawButton.setText("DRAW");
        drawButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawButtonActionPerformed(evt);
            }
        });

        retractButton.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        retractButton.setForeground(new java.awt.Color(0, 0, 255));
        retractButton.setText("RETRACT");
        retractButton.setToolTipText("");
        retractButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retractButtonActionPerformed(evt);
            }
        });

        eStopButton.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        eStopButton.setForeground(new java.awt.Color(255, 0, 0));
        eStopButton.setText("E-STOP");
        eStopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eStopButtonActionPerformed(evt);
            }
        });

        modeLabel.setText("Mode: IMAGINE");
        modeLabel.setToolTipText("");

        debugCheck.setText("DEBUG Mode");
        debugCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debugCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(yLabel)
                                    .addComponent(yPosLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(yMaxLabel)
                                    .addComponent(yMinLabel)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(yAxisBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(51, 51, 51)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(fOpticDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(rOpticDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(40, 40, 40)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(rOpticLabel)
                                                    .addComponent(fOpticLabel))))))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(drawMaxLabel)
                                    .addComponent(drawMinLabel)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(drawingBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(drawLabel)
                                            .addComponent(drawPosLabel)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(xMinLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(xLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(xPosLabel))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(xAxisBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(xMaxLabel))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lMotorCurrentBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lMotorCurrentLabel))
                                                .addGap(17, 17, 17))
                                            .addComponent(lMotorLabel))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(121, 121, 121)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(yLinacCurrentBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(yLinacCurrentLabel))
                                                .addGap(58, 58, 58)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(drawLinacCurrentLabel)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(1, 1, 1)
                                                        .addComponent(drawLinacCurrentBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(feedbackLabel)
                                                        .addGap(26, 26, 26))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(18, 18, 18)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(rMotorCurrentBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(rMotorCurrentLabel))
                                                                .addGap(23, 23, 23))
                                                            .addComponent(rMotorLabel))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(yLinacLabel)
                                                        .addGap(22, 22, 22)))
                                                .addComponent(drawLinacLabel)))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(fireButton, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(drawButton, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(retractButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(eStopButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(connectStateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(endStateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(currentDisplayLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 338, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(modeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(debugCheck))
                            .addComponent(connectArduinoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connectStateButton)
                    .addComponent(connectArduinoButton)
                    .addComponent(endStateButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(currentDisplayLabel)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(drawLinacLabel)
                                            .addComponent(yLinacLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(drawLinacCurrentBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(drawLinacCurrentLabel))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(yLinacCurrentBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(yLinacCurrentLabel))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lMotorLabel)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(20, 20, 20)
                                    .addComponent(lMotorCurrentBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lMotorCurrentLabel)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rMotorLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rMotorCurrentBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rMotorCurrentLabel)))
                        .addGap(45, 45, 45)
                        .addComponent(feedbackLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(xLabel)
                            .addComponent(xPosLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(xAxisBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(xMinLabel)
                            .addComponent(xMaxLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(yMaxLabel)
                                    .addComponent(drawMaxLabel))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(fOpticDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(fOpticLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(rOpticLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(rOpticDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(yAxisBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(drawingBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(100, 100, 100)
                                        .addComponent(drawLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(drawPosLabel))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(114, 114, 114)
                                .addComponent(yLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yPosLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(yMinLabel)
                            .addComponent(drawMinLabel)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(eStopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(drawButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(debugCheck)
                                    .addComponent(modeLabel))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(retractButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fireButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        xAxisBar.getAccessibleContext().setAccessibleDescription("");
        yAxisBar.getAccessibleContext().setAccessibleDescription("");
        drawingBar.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectStateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectStateButtonActionPerformed
        // Connect to the MechArchState process
        if(!connected) {
            ConnectToStateMachine();
        } else {
            DisconnectFromStateMachine();
        }
    }//GEN-LAST:event_connectStateButtonActionPerformed

    private void connectArduinoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectArduinoButtonActionPerformed
        // Send command to the state machine telling to connect to the arduino
    }//GEN-LAST:event_connectArduinoButtonActionPerformed

    private void fireButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fireButtonActionPerformed
        // Send FIRE command to the state machine
    }//GEN-LAST:event_fireButtonActionPerformed

    private void drawButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawButtonActionPerformed
        // Send DRAW command to the state machine
    }//GEN-LAST:event_drawButtonActionPerformed

    private void retractButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retractButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_retractButtonActionPerformed

    private void eStopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eStopButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eStopButtonActionPerformed

    private void endStateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endStateButtonActionPerformed
        // Close the state machine, tidy up resources, and exit;
        if (connected) {
            DisconnectFromStateMachine();
        }
        System.exit(0);
    }//GEN-LAST:event_endStateButtonActionPerformed

    private void debugCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debugCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_debugCheckActionPerformed

    private void ConnectToStateMachine() {
        try {
            socket = new Socket("localhost", 2222);
            out = new PrintWriter(socket.getOutputStream());
            in = new BufferedReader(
                    new InputStreamReader(socket.getInputStream()));
            connectStateButton.setText("Disconnect from State Machine");
            connected = true;
            timedUpdater = new Updater(this, updatesPerSecond);
            new Thread(timedUpdater).start();
        } catch (IOException ex) {}
    }
    
    private void DisconnectFromStateMachine() {
        try {
                in.close();
                out.close();
                socket.close();
                connectStateButton.setText("Connect to State Machine");
                connected = false;
            } catch (IOException ex) {}
    }
    
    public void Update() {
        
        
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MechArchGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MechArchGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MechArchGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MechArchGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MechArchGUI().setVisible(true);
            }
        });
        
    }
    
    public boolean terminateThread;
    public int updatesPerSecond = 20;
    
    public boolean DRAW = false;
    public boolean FIRE = false;
    public boolean RETRACT = false;
    public boolean ESTOP = false;
    
    private Updater timedUpdater;
    static private boolean connected = false;
    static private Socket socket;
    static private PrintWriter out;
    static private BufferedReader in;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connectArduinoButton;
    private javax.swing.JButton connectStateButton;
    private javax.swing.JLabel currentDisplayLabel;
    private javax.swing.JCheckBox debugCheck;
    private javax.swing.JButton drawButton;
    private javax.swing.JLabel drawLabel;
    private javax.swing.JProgressBar drawLinacCurrentBar;
    private javax.swing.JLabel drawLinacCurrentLabel;
    private javax.swing.JLabel drawLinacLabel;
    private javax.swing.JLabel drawMaxLabel;
    private javax.swing.JLabel drawMinLabel;
    private javax.swing.JLabel drawPosLabel;
    private javax.swing.JProgressBar drawingBar;
    private javax.swing.JButton eStopButton;
    private javax.swing.JButton endStateButton;
    private javax.swing.JProgressBar fOpticDisplay;
    private javax.swing.JLabel fOpticLabel;
    private javax.swing.JLabel feedbackLabel;
    private javax.swing.JButton fireButton;
    private javax.swing.JProgressBar lMotorCurrentBar;
    private javax.swing.JLabel lMotorCurrentLabel;
    private javax.swing.JLabel lMotorLabel;
    private javax.swing.JLabel modeLabel;
    private javax.swing.JProgressBar rMotorCurrentBar;
    private javax.swing.JLabel rMotorCurrentLabel;
    private javax.swing.JLabel rMotorLabel;
    private javax.swing.JProgressBar rOpticDisplay;
    private javax.swing.JLabel rOpticLabel;
    private javax.swing.JButton retractButton;
    private javax.swing.JProgressBar xAxisBar;
    private javax.swing.JLabel xLabel;
    private javax.swing.JLabel xMaxLabel;
    private javax.swing.JLabel xMinLabel;
    private javax.swing.JLabel xPosLabel;
    private javax.swing.JProgressBar yAxisBar;
    private javax.swing.JLabel yLabel;
    private javax.swing.JProgressBar yLinacCurrentBar;
    private javax.swing.JLabel yLinacCurrentLabel;
    private javax.swing.JLabel yLinacLabel;
    private javax.swing.JLabel yMaxLabel;
    private javax.swing.JLabel yMinLabel;
    private javax.swing.JLabel yPosLabel;
    // End of variables declaration//GEN-END:variables
}